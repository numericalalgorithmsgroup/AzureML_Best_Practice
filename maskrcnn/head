          o _O_r_i_g_a_m_i_ _-_ _T_a_s_k_ _E_x_e_c_u_t_i_o_n_ _F_r_a_m_e_w_o_r_k
          o _T_e_c_h_n_o_l_o_g_y_ _B_e_n_c_h_m_a_r_k_i_n_g
          o _H_P_C_ _T_r_a_i_n_i_n_g_ _C_o_u_r_s_e_s
          o _P_O_P_ _E_U_ _P_r_o_j_e_c_t
    * _S_u_p_p_o_r_t
          o _T_e_c_h_n_i_c_a_l_ _S_u_p_p_o_r_t
                # _T_e_c_h_n_i_c_a_l_ _S_u_p_p_o_r_t_ _O_v_e_r_v_i_e_w
                # _C_o_n_t_a_c_t_ _o_u_r_ _S_u_p_p_o_r_t_ _T_e_a_m
                # _S_o_f_t_w_a_r_e_ _L_i_c_e_n_s_i_n_g
          o Resources
                # _C_a_s_e_ _S_t_u_d_i_e_s
                # _D_o_c_u_m_e_n_t_a_t_i_o_n
                # _I_n_d_u_s_t_r_y_ _A_r_t_i_c_l_e_s
                # _I_n_s_t_a_l_l_e_r_'_s_ _&_ _U_s_e_r_s_'_ _N_o_t_e_s
                # _K_n_o_w_n_ _I_s_s_u_e_s
                # _T_e_c_h_n_i_c_a_l_ _P_o_s_t_e_r_ _R_e_p_o_s_i_t_o_r_y
                # _T_e_c_h_n_i_c_a_l_ _R_e_p_o_r_t_ _R_e_p_o_s_i_t_o_r_y
                # _W_e_b_i_n_a_r_s_ _&_ _P_r_e_s_e_n_t_a_t_i_o_n_s
          o _L_i_c_e_n_c_e_ _M_a_n_a_g_e_m_e_n_t
                # _K_u_s_a_r_i_ _F_A_Q
                # _K_u_s_a_r_i_ _L_i_c_e_n_c_e_ _M_a_n_a_g_e_m_e_n_t
          o _S_o_f_t_w_a_r_e_ _D_o_w_n_l_o_a_d_s
          o _C_o_d_e_ _C_o_n_t_r_i_b_u_t_i_o_n
    * _A_b_o_u_t
          o _A_b_o_u_t_ _N_A_G
          o _B_l_o_g
          o _P_e_o_p_l_e
          o _C_a_r_e_e_r_s
                # _C_a_r_e_e_r_s_ _a_t_ _N_A_G
                # _D_i_v_e_r_s_i_t_y
                # _E_m_p_l_o_y_e_e_ _B_e_n_e_f_i_t_s_ _(_U_K_)
                # _E_m_p_l_o_y_e_e_ _B_e_n_e_f_i_t_s_ _(_U_S_)
                # _E_n_v_i_r_o_n_m_e_n_t_a_l_ _P_o_l_i_c_y
                # _L_i_v_i_n_g_,_ _w_o_r_k_i_n_g_ _a_n_d_ _r_e_l_o_c_a_t_i_n_g_ _t_o_ _O_x_f_o_r_d_s_h_i_r_e
                # _S_u_p_p_o_r_t_i_n_g_ _S_t_u_d_e_n_t_s
          o _N_A_G_n_e_w_s
          o _P_r_e_s_s_ _R_e_l_e_a_s_e_s
          o _E_v_e_n_t_s
          o Resources
                # _C_a_s_e_ _S_t_u_d_i_e_s
                # _D_o_c_u_m_e_n_t_a_t_i_o_n
                # _I_n_d_u_s_t_r_y_ _A_r_t_i_c_l_e_s
                # _I_n_s_t_a_l_l_e_r_'_s_ _&_ _U_s_e_r_s_'_ _N_o_t_e_s
                # _K_n_o_w_n_ _I_s_s_u_e_s
                # _T_e_c_h_n_i_c_a_l_ _P_o_s_t_e_r_ _R_e_p_o_s_i_t_o_r_y
                # _T_e_c_h_n_i_c_a_l_ _R_e_p_o_r_t_ _R_e_p_o_s_i_t_o_r_y
                # _W_e_b_i_n_a_r_s_ _&_ _P_r_e_s_e_n_t_a_t_i_o_n_s
          o _C_o_l_l_a_b_o_r_a_t_i_o_n
          o _P_a_r_t_n_e_r_s
          o _H_o_w_ _t_o_ _c_i_t_e_ _N_A_G
          o _M_e_m_b_e_r_s_h_i_p
          o _L_i_f_e_ _S_e_r_v_i_c_e_ _R_e_c_o_g_n_i_t_i_o_n_ _A_w_a_r_d
          o _W_o_r_l_d_w_i_d_e_ _D_i_s_t_r_i_b_u_t_o_r_ _N_e_t_w_o_r_k
          o _W_o_r_l_d_w_i_d_e_ _C_o_n_t_a_c_t_ _I_n_f_o_r_m_a_t_i_o_n

Search [search                                                          ]
Submit

 Toggle navigation
********** MMaaiinn nnaavviiggaattiioonn **********
    * _H_o_m_e
    * _S_e_r_v_i_c_e_s
          o _A_l_g_o_r_i_t_h_m_i_c_ _D_i_f_f_e_r_e_n_t_i_a_t_i_o_n_ _S_o_l_u_t_i_o_n_s
                # _A_l_g_o_r_i_t_h_m_i_c_ _D_i_f_f_e_r_e_n_t_i_a_t_i_o_n_ _S_o_l_u_t_i_o_n_s
                # _A_l_g_o_r_i_t_h_m_i_c_ _D_i_f_f_e_r_e_n_t_i_a_t_i_o_n_ _S_e_r_v_i_c_e_s
                # _A_l_g_o_r_i_t_h_m_i_c_ _D_i_f_f_e_r_e_n_t_i_a_t_i_o_n_ _S_o_f_t_w_a_r_e
                # _A_l_g_o_r_i_t_h_m_i_c_ _D_i_f_f_e_r_e_n_t_i_a_t_i_o_n_ _R_e_s_e_a_r_c_h
          o _M_a_t_h_e_m_a_t_i_c_a_l_ _O_p_t_i_m_i_z_a_t_i_o_n_ _C_o_n_s_u_l_t_a_n_c_y
          o _C_l_o_u_d_ _H_P_C_ _M_i_g_r_a_t_i_o_n_ _S_e_r_v_i_c_e
          o _S_o_f_t_w_a_r_e_ _O_p_t_i_m_i_z_a_t_i_o_n_ _a_n_d_ _C_o_d_e_ _M_o_d_e_r_n_i_z_a_t_i_o_n
          o _A_l_g_o_r_i_t_h_m_ _D_e_s_i_g_n_ _&_ _D_e_v_e_l_o_p_m_e_n_t
          o _S_o_f_t_w_a_r_e_ _P_o_r_t_i_n_g_ _&_ _T_u_n_i_n_g
          o _T_r_a_i_n_i_n_g_ _C_o_u_r_s_e_s
          o _C_a_s_e_ _S_t_u_d_i_e_s
    * _S_o_f_t_w_a_r_e
          o _A_l_g_o_r_i_t_h_m_i_c_ _D_i_f_f_e_r_e_n_t_i_a_t_i_o_n_ _S_o_f_t_w_a_r_e
          o _M_a_t_h_e_m_a_t_i_c_a_l_ _O_p_t_i_m_i_z_a_t_i_o_n_ _S_o_f_t_w_a_r_e
          o _N_A_G_ _L_i_b_r_a_r_y
                # _N_A_G_ _L_i_b_r_a_r_y
                # _N_A_G_ _L_i_b_r_a_r_y_ _-_ _L_a_t_e_s_t_ _C_o_n_t_e_n_t
                # _N_A_G_ _L_i_b_r_a_r_y_ _f_o_r_ _C
                # _N_A_G_ _L_i_b_r_a_r_y_ _f_o_r_ _C_+_+
                # _N_A_G_ _L_i_b_r_a_r_y_ _f_o_r_ _F_o_r_t_r_a_n
                # _N_A_G_ _L_i_b_r_a_r_y_ _f_o_r_ _J_a_v_a
                # _N_A_G_ _L_i_b_r_a_r_y_ _f_o_r_ _P_y_t_h_o_n
                # _N_A_G_ _L_i_b_r_a_r_y_ _f_o_r_ _._N_E_T
                # _N_A_G_ _L_i_b_r_a_r_y_ _f_o_r_ _S_M_P_ _&_ _M_u_l_t_i_c_o_r_e
                # _N_A_G_ _L_i_b_r_a_r_y_ _f_o_r_ _X_e_o_n_ _P_h_i_ _
                # _N_A_G_ _T_o_o_l_b_o_x_ _f_o_r_ _M_A_T_L_A_B_ _®
                # _N_A_G_ _a_n_d_ _M_i_c_r_o_s_o_f_t_ _O_f_f_i_c_e
          o _N_A_G_ _F_o_r_t_r_a_n_ _C_o_m_p_i_l_e_r
                # _N_A_G_ _F_o_r_t_r_a_n_ _C_o_m_p_i_l_e_r
                # _N_A_G_ _F_o_r_t_r_a_n_ _B_u_i_l_d_e_r
          o _D_o_w_n_l_o_a_d_ _S_o_f_t_w_a_r_e
                # _A_l_l_ _D_o_w_n_l_o_a_d_s
                # _N_A_G_ _L_i_b_r_a_r_y_ _V_e_r_s_i_o_n_s
                # _L_i_b_r_a_r_y_ _f_o_r_ _._N_E_T
                # _L_i_b_r_a_r_y_ _f_o_r_ _P_y_t_h_o_n_ _v_e_r_s_i_o_n_s
                # _L_i_b_r_a_r_y_ _f_o_r_ _J_a_v_a_ _v_e_r_s_i_o_n_s
                # _F_o_r_t_r_a_n_ _L_i_b_r_a_r_y_ _f_o_r_ _S_M_P_ _&_ _M_u_l_t_i_c_o_r_e_ _V_e_r_s_i_o_n_s
                # _C_ _L_i_b_r_a_r_y_ _f_o_r_ _S_M_P_ _&_ _M_u_l_t_i_c_o_r_e_ _V_e_r_s_i_o_n_s
                # _L_i_b_r_a_r_y_ _f_o_r_ _t_h_e_ _X_e_o_n_ _P_h_i
                # _T_o_o_l_b_o_x_ _f_o_r_ _M_A_T_L_A_B_ _®_ _V_e_r_s_i_o_n_s
                # _F_o_r_t_r_a_n_ _C_o_m_p_i_l_e_r_ _V_e_r_s_i_o_n_s
                # _d_c_o_/_c_+_+_ _V_e_r_s_i_o_n_s
                # _T_e_r_m_s_ _&_ _C_o_n_d_i_t_i_o_n_s
          o _D_o_c_u_m_e_n_t_a_t_i_o_n
          o _O_r_i_g_a_m_i_ _-_ _T_a_s_k_ _E_x_e_c_u_t_i_o_n_ _F_r_a_m_e_w_o_r_k
          o _A_c_c_u_r_a_c_y_ _&_ _Q_u_a_l_i_t_y_ _A_s_s_u_r_a_n_c_e
          o _D_a_t_a_ _M_i_n_i_n_g_ _C_o_m_p_o_n_e_n_t_s
          o _L_a_n_g_u_a_g_e_s_ _a_n_d_ _E_n_v_i_r_o_n_m_e_n_t_s
          o _N_u_m_e_r_i_c_a_l_ _R_o_u_t_i_n_e_s_ _f_o_r_ _G_P_U_s
          o _N_A_G_ _M_P_I_ _P_a_r_a_l_l_e_l_ _L_i_b_r_a_r_y
    * _H_P_C_ _&_ _C_l_o_u_d
          o _H_P_C_ _a_n_d_ _C_l_o_u_d_ _C_o_n_s_u_l_t_i_n_g_ _a_n_d_ _S_e_r_v_i_c_e_s
          o _C_l_o_u_d_ _H_P_C_ _M_i_g_r_a_t_i_o_n_ _S_e_r_v_i_c_e
          o _T_C_O_ _C_a_l_c_u_l_a_t_o_r
          o _S_o_f_t_w_a_r_e_ _O_p_t_i_m_i_z_a_t_i_o_n_ _a_n_d_ _C_o_d_e_ _M_o_d_e_r_n_i_z_a_t_i_o_n
          o _G_P_U_ _a_n_d_ _A_c_c_e_l_e_r_a_t_o_r_ _C_o_d_e_ _T_u_n_i_n_g
          o _O_r_i_g_a_m_i_ _-_ _T_a_s_k_ _E_x_e_c_u_t_i_o_n_ _F_r_a_m_e_w_o_r_k
          o _T_e_c_h_n_o_l_o_g_y_ _B_e_n_c_h_m_a_r_k_i_n_g
          o _H_P_C_ _T_r_a_i_n_i_n_g_ _C_o_u_r_s_e_s
          o _P_O_P_ _E_U_ _P_r_o_j_e_c_t
    * _S_u_p_p_o_r_t
          o _T_e_c_h_n_i_c_a_l_ _S_u_p_p_o_r_t
                # _T_e_c_h_n_i_c_a_l_ _S_u_p_p_o_r_t_ _O_v_e_r_v_i_e_w
                # _C_o_n_t_a_c_t_ _o_u_r_ _S_u_p_p_o_r_t_ _T_e_a_m
                # _S_o_f_t_w_a_r_e_ _L_i_c_e_n_s_i_n_g
          o Resources
                # _C_a_s_e_ _S_t_u_d_i_e_s
                # _D_o_c_u_m_e_n_t_a_t_i_o_n
                # _I_n_d_u_s_t_r_y_ _A_r_t_i_c_l_e_s
                # _I_n_s_t_a_l_l_e_r_'_s_ _&_ _U_s_e_r_s_'_ _N_o_t_e_s
                # _K_n_o_w_n_ _I_s_s_u_e_s
                # _T_e_c_h_n_i_c_a_l_ _P_o_s_t_e_r_ _R_e_p_o_s_i_t_o_r_y
                # _T_e_c_h_n_i_c_a_l_ _R_e_p_o_r_t_ _R_e_p_o_s_i_t_o_r_y
                # _W_e_b_i_n_a_r_s_ _&_ _P_r_e_s_e_n_t_a_t_i_o_n_s
          o _L_i_c_e_n_c_e_ _M_a_n_a_g_e_m_e_n_t
                # _K_u_s_a_r_i_ _F_A_Q
                # _K_u_s_a_r_i_ _L_i_c_e_n_c_e_ _M_a_n_a_g_e_m_e_n_t
          o _S_o_f_t_w_a_r_e_ _D_o_w_n_l_o_a_d_s
          o _C_o_d_e_ _C_o_n_t_r_i_b_u_t_i_o_n
    * _A_b_o_u_t
          o _A_b_o_u_t_ _N_A_G
          o _B_l_o_g
          o _P_e_o_p_l_e
          o _C_a_r_e_e_r_s
                # _C_a_r_e_e_r_s_ _a_t_ _N_A_G
                # _D_i_v_e_r_s_i_t_y
                # _E_m_p_l_o_y_e_e_ _B_e_n_e_f_i_t_s_ _(_U_K_)
                # _E_m_p_l_o_y_e_e_ _B_e_n_e_f_i_t_s_ _(_U_S_)
                # _E_n_v_i_r_o_n_m_e_n_t_a_l_ _P_o_l_i_c_y
                # _L_i_v_i_n_g_,_ _w_o_r_k_i_n_g_ _a_n_d_ _r_e_l_o_c_a_t_i_n_g_ _t_o_ _O_x_f_o_r_d_s_h_i_r_e
                # _S_u_p_p_o_r_t_i_n_g_ _S_t_u_d_e_n_t_s
          o _N_A_G_n_e_w_s
          o _P_r_e_s_s_ _R_e_l_e_a_s_e_s
          o _E_v_e_n_t_s
          o Resources
                # _C_a_s_e_ _S_t_u_d_i_e_s
                # _D_o_c_u_m_e_n_t_a_t_i_o_n
                # _I_n_d_u_s_t_r_y_ _A_r_t_i_c_l_e_s
                # _I_n_s_t_a_l_l_e_r_'_s_ _&_ _U_s_e_r_s_'_ _N_o_t_e_s
                # _K_n_o_w_n_ _I_s_s_u_e_s
                # _T_e_c_h_n_i_c_a_l_ _P_o_s_t_e_r_ _R_e_p_o_s_i_t_o_r_y
                # _T_e_c_h_n_i_c_a_l_ _R_e_p_o_r_t_ _R_e_p_o_s_i_t_o_r_y
                # _W_e_b_i_n_a_r_s_ _&_ _P_r_e_s_e_n_t_a_t_i_o_n_s
          o _C_o_l_l_a_b_o_r_a_t_i_o_n
          o _P_a_r_t_n_e_r_s
          o _H_o_w_ _t_o_ _c_i_t_e_ _N_A_G
          o _M_e_m_b_e_r_s_h_i_p
          o _L_i_f_e_ _S_e_r_v_i_c_e_ _R_e_c_o_g_n_i_t_i_o_n_ _A_w_a_r_d
          o _W_o_r_l_d_w_i_d_e_ _D_i_s_t_r_i_b_u_t_o_r_ _N_e_t_w_o_r_k
          o _W_o_r_l_d_w_i_d_e_ _C_o_n_t_a_c_t_ _I_n_f_o_r_m_a_t_i_o_n
[/sites/default/files/styles/banner/public/2020-06/cloud-
computing.jpeg?itok=60DK1E6m]
Sunny Weather Forecast for ARM  s Cost of Solution in Cloud HPC
Published 25/08/2020 By Branden Moore
One of the primary drivers for Cloud computing is access to architectures and
systems which may not be readily available in-house.  One example of this is
AWS  s somewhat recent introduction of their own custom-designed _G_r_a_v_i_t_o_n_ _2
processor. This processor is based on the ARM architecture, rather than the
x86-based architectures from Intel and AMD. We have had a number of clients
enquire about how viable ARM is for their HPC needs. While there are a handful
of published benchmarks available, I decided to take an afternoon and try it
for myself.
For this small exercise, I decided to benchmark the weather code _W_R_F v3.9.1.1.
There are two "traditional" benchmarks for WRFv3, representing different
resolutions (12km and 2.5km resolutions). Both benchmarks run for 3 simulated
hours. The smaller benchmark (12km resolution) typically scales well to a few
hundred cores, and the larger benchmark (2.5km resolution) will scale to a few
thousand cores.  However, for this project, I ran the benchmarks on only a
single node, and as this exercise was only to satisfy my own curiosity, I did
not re-run the benchmarks multiple times which we would normally do to capture
statistical variation.
For the benchmarking hardware, I wanted to compare offerings from Intel, AMD
and ARM.  AWS is currently the only major cloud provider to offer ARM-based
instances with their AWS Graviton 2 processor. This led me to the C5, C5a and
C6g instance types on AWS, of which I selected the largest instance type
available, in order to get a full node.  The benchmarked systems all used
Amazon Linux 2 as the OS, and I used _S_p_a_c_k to install GCC 9.3.0, and to build
WRF  s dependencies_[_1_] which made building for ARM no more difficult than for
Intel and AMD. When building WRF itself, the only modifications to the default
compilation configuration was to add the  aarch64  architecture to the GNU/
Linux configuration section, and tuning parameters to optimize for the target
platform (-march=native -mtune=native).
 
IInnssttaannccee NNaammee PPrroocceessssoorr IIDD    ## SSoocckkeettss ## vvCCPPUU ## PPhhyyssiiccaall CCoorreess RRAAMM   PPrriiccee//HHrr
cc55..2244xxllaarrggee   Intel Xeon      2         96     48               192GB $4.08
              Platinum 8275CL
cc55aa..2244xxllaarrggee  AMD EPYC 7R32   1         96     48               192GB $3.696
cc66gg..1166xxllaarrggee  AWS Graviton 2  1         64     64               128GB $2.176
 
Already, it is clear that this benchmark will not quite be an apples-to-apples
comparison. The C5 (Intel) instance is a dual-socket configuration, whereas
both the C5a (AMD) and C6g (ARM) instances are single socket. Both C5 and C5a
have SMT (aka, HyperThreading), whereas the C6g does not. If we instead
consider comparing the performance from each instance offering, rather than
looking at the underlying CPU configuration, the comparisons become much more
straightforward.
Results
********** SSMMTT // HHyyppeerrtthhrreeaaddiinngg **********
Many HPC applications demonstrate a performance degradation when SMT is in use,
so many HPC centers disable it. I wanted to double-check to see if that is the
case for this benchmark. A quick look at Figure 1 shows that in this case,
there is a performance advantage to using SMT on both Intel and AMD systems for
WRF (aka, use all 96 threads), but the difference is minor at best. We can also
see that the dual-socket Intel system significantly out-performs the single-
socket AMD system on the larger benchmark, most likely due to the higher
overall system memory bandwidth_[_2_]. For the remainder of this paper, full
instance  will refer to using all of the vCPUs available to the instance.
[Performance advantage to using SMT]
FFiigguurree 11:: CCoommppaarriinngg uussiinngg SSMMTT vvss nnoott ?? sshhoorrtteerr iiss bbeetttteerr
********** CCoommppaarriinngg PPeerrffoorrmmaannccee ffoorr AARRMM vvss IInntteell vvss AAMMDD ffoorr WWRRFF **********
Figure 2 shows the total compute time (not including startup time or writing
the results to disk) for WRF running both benchmarks across the three
architectures. It is plain to see that AWS's Graviton 2 chip performs quite
competitively. While it is the slowest of the three for the smaller benchmark
(12km resolution), it out-performs AMD's offering during the larger scale
benchmark (2.5km resolution). The Intel-based system shows a non-trivial
performance advantage over both ARM and AMD.
[Compute time using full instance (all vCPU)]
FFiigguurree 22:: CCoommppuuttee ttiimmee uussiinngg ffuullll iinnssttaannccee ((aallll vvCCPPUU)) ?? sshhoorrtteerr iiss bbeetttteerr
I expect that the higher memory speeds available on the Graviton 2 processor is
the main reason that it out-performs the AMD system on the larger-scale
benchmark. If AWS introduces a dual-socket AMD Rome instance type, this should,
of course, be revisited. The Intel processor  s higher clock speed combined
with the increased memory bandwidth from having 2 sockets give it a sizable
performance advantage here.
********** CCoommppaarriinngg CCoossttss ooff AARRMM vvss IInntteell vvss AAMMDD ffoorr WWRRFF **********
With this study taking place in "the Cloud," it is imperative to also consider
costs when benchmarking.   AWS has priced their Graviton 2 offerings extremely
competitively. Recall that the instances being benchmarked cost (as of today,
in the US-EAST-2 region, with On-Demand pricing) $4.08/hr for the Intel system,
$3.70/hr for the AMD system, and only $2.18/hr for the Graviton 2 system.
We multiply the hourly price by our runtime to give us our cost-to-solution
numbers. As can be seen in Figure 3, while the Intel-based instance has much
higher performance than the ARM-based instance, when you factor in prices, the
Graviton 2 gives us a lower cost-to-solution, despite taking a longer time to
reach the solution.
[Cost comparisons]
FFiigguurree 33:: CCoosstt ccoommppaarriissoonnss -- sshhoorrtteerr iiss bbeetttteerr
There is a distinct tradeoff between performance and cost for WRF on these
platforms. For the 2.5km benchmark, we would ideally explore a scaling study as
well, to see if there is a point where you can get the performance of an Intel-
based solution, but at a cheaper overall cost, with an ARM-based solution.
[Cost & Performance comparisons]
FFiigguurree 44:: CCoosstt aanndd PPeerrffoorrmmaannccee ccoommppaarriissoonnss -- sshhoorrtteerr iiss bbeetttteerr
SSyysstteemm NNaammee         BBeenncchhmmaarrkk   CCoommppuuttee TTiimmee ((ss)) BBeenncchhmmaarrkk CCoosstt (($$))
cc66gg ?? ((GGrraavviittoonn 22)) CONUS 12km  75.33            $0.046
cc55aa ?? ((EEPPYYCC 77RR3322))  CONUS 12km  68.26            $0.070
cc55 ?? ((XXeeoonn 88227755CCLL)) CONUS 12km  59.00            $0.067
cc66gg ?? ((GGrraavviittoonn 22)) CONUS 2.5km 4384.16          $2.65
cc55aa ?? ((EEPPYYCC 77RR3322))  CONUS 2.5km 4799.63          $4.93
cc55 ?? ((XXeeoonn 88227755CCLL)) CONUS 2.5km 3395.74          $3.85
As the AMD EYPC and ARM HPC ecosystems mature, we can hope to see increased
performance from compilers which are more targeted at these architectures (ie,
AOCC from AMD, and ARM  s Allinea Studio), as well as other LLVM-based
compilers. In the past, we have seen that the Intel compiler does a better job
than gfortran for optimizing WRF for Intel processors. It would be interesting
to revisit this benchmark study with additional compilers.
[/sites/default/files/styles/video/public/2020-07/cloud-
cost_0.jpeg?itok=DMc5Wcdk]
Summary
In response to questions about the suitability for ARM processors for HPC
today, I ran one popular HPC benchmark, WRFv3 on 3 different compute-
optimized  AWS instance types. We found that AWS  s custom ARM-based
offering, while not the fastest processor available for this benchmark,
provides a very cost-efficient solution for WRF, and performance is competitive
to other, more traditional HPC processors.
If you  re interested in more in-depth benchmarking and performance analysis
of various HPC hardware solutions, please get in _c_o_n_t_a_c_t.
********** FFuurrtthheerr rreeaaddiinngg **********
    * _h_t_t_p_s_:_/_/_w_w_w_._n_a_g_._c_o_m_/_c_o_n_t_e_n_t_/_n_a_g_-_c_l_o_u_d_-_h_p_c_-_m_i_g_r_a_t_i_o_n_-_s_e_r_v_i_c_e
    * _h_t_t_p_s_:_/_/_w_w_w_._n_a_g_._c_o_m_/_b_l_o_g_/_c_o_s_t_-_s_o_l_u_t_i_o_n_-_c_l_o_u_d_-_h_p_c
       
 
===============================================================================
_[_1_] I first attempted to use GCC 10, but gfortran 10 and WRF do not appear to
get along well.  WRF would crash at runtime due to routines in libgfortran.
_[_2_] If AWS introduces a dual-socket AMD Rome instance size, such as are
available on other cloud providers, the performance profile should change
significantly, and this will be worth revisiting.
Author
_B_r_a_n_d_e_n_ _M_o_o_r_e
Leave a Comment
[name                          ]
Submit
Sign up for the NAG newsletter [Unknown INPUT type]
Submit

** FFooootteerr mmeennuu **
    * _A_b_o_u_t_ _N_A_G
          o _B_l_o_g
          o _N_A_G_n_e_w_s
          o _C_a_s_e_ _S_t_u_d_i_e_s
          o _C_o_n_t_a_c_t_ _u_s
    * _S_u_p_p_o_r_t
          o _C_o_n_t_a_c_t_ _s_u_p_p_o_r_t
          o _D_o_c_u_m_e_n_t_a_t_i_o_n
          o _I_n_s_t_a_l_l_e_r_'_s_ _&_ _U_s_e_r_s_'_ _N_o_t_e_s
          o _D_o_w_n_l_o_a_d_s
          o _T_e_c_h_n_i_c_a_l_ _R_e_p_o_r_t_s

Copyright 2021, Numerical Algorithms Group Ltd (The)

** LLeeggaall **
    * _P_r_i_v_a_c_y_ _N_o_t_i_c_e
    * _T_r_a_d_e_m_a_r_k_s
[NAG logo - white]

_W_o_r_l_d_w_i_d_e_ _L_o_c_a_t_i_o_n_s

